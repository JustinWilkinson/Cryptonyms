<h4 class="@(Team == null ? "" : "text-white")">@(Team == null ? "All Players" : $"{Team} Team")</h4>
<ul class="dropzone @_dropClass list-group" ondragover="event.preventDefault();" ondragstart="event.dataTransfer.setData('', event.target.id);" @ondrop="HandleDrop" @ondragenter="HandleDragEnter" @ondragleave="HandleDragLeave">
    @foreach (var player in _players)
    {
        <PlayerListItem Player="player"/>
    }
</ul>

@code {
    [CascadingParameter]
    public TeamContainer Container { get; set; }

    [Parameter]
    public Team? Team { get; set; }

    private List<Player> _players = new List<Player>();
    private string _dropClass = "";

    protected override void OnParametersSet()
    {
        _players.Clear();
        _players.AddRange(Container.Players.Where(x => x.Team == Team));
    }

    private void HandleDragEnter()
    {
        if (Team == Container.Payload.Team)
        {
            return;
        }
        else
        {
            _dropClass = "can-drop";
        }
    }

    private void HandleDragLeave() => _dropClass = "";

    private async Task HandleDrop()
    {
        _dropClass = "";
        if (!(Container.Payload.Team == Team))
        {
            Container.Payload.IsSpymaster = false;
            Container.Payload.Team = Team;
            await Container.UpdatePlayerAsync(Container.Payload);
        }
    }
}